{"version":3,"file":"static/js/744.59191086.chunk.js","mappings":"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","sources":["models/products.ts","pages/Products/create/ProductForm.tsx","pages/Products/create/UploadImage.tsx","pages/Products/create/index.tsx","../node_modules/@mui/icons-material/ImageSearchTwoTone.js"],"sourcesContent":["import { DocumentSnapshot } from 'firebase/firestore';\n\nexport interface ProductInterface {\n    productId?: string;\n    categoryId: string;\n    content: number;\n    description: string;\n    image: string | null;\n    name: string;\n    price: number;\n    promo: number;\n    stocks: number;\n    storageLife: number;\n    type: string;\n}\n\nclass ProductModel {\n    product: ProductInterface;\n\n    constructor(product: ProductInterface) {\n        this.product = product;\n    }\n\n    getProduct(): ProductInterface {\n        return this.product;\n    }\n\n    setImage(imageUrl: string) {\n        this.product.image = imageUrl;\n    }\n}\n\nexport function convertProductQuerySnapshots(snapshot: DocumentSnapshot) {\n    const productData = snapshot.data();\n    let productQueryData: ProductInterface = {\n        productId: snapshot.id,\n        categoryId: productData.categoryId,\n        content: productData.content,\n        description: productData.description,\n        image: productData.image,\n        name: productData.name,\n        price: productData.price,\n        promo: productData.promo,\n        stocks: productData.stocks,\n        storageLife: productData.storageLife,\n        type: productData.type\n    };\n\n    return new ProductModel(productQueryData);\n}\n\nexport default ProductModel;","import React from 'react';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { ProductInterface } from 'src/models/products';\n\ninterface Props {\n    productInfo: ProductInterface,\n    onTextChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n    onNumberChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n    onSubmitForm: (event: React.FormEvent<HTMLFormElement>) => void,\n    error: string | null\n}\n\nfunction ProductForm({ productInfo, onTextChange, onNumberChange, onSubmitForm, error }: Props) {\n    const { categoryId, content, description, name, price, promo, stocks, storageLife, type } = productInfo;\n\n    return (\n        <>\n            <Card sx={{ width: '100%', padding: 3 }}>\n                <form onSubmit={event => onSubmitForm(event)}>\n                    <Grid container spacing={2}>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"name\" \n                                label=\"Product Name\" \n                                variant=\"outlined\"\n                                value={name}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"price\" \n                                type=\"number\"\n                                label=\"Price\" \n                                variant=\"outlined\"\n                                value={price}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">₱</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"stocks\" \n                                type=\"number\"\n                                label=\"Stocks\" \n                                variant=\"outlined\"\n                                value={stocks}\n                                onChange={event => onNumberChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"content\" \n                                type=\"number\"\n                                label=\"Content\" \n                                variant=\"outlined\"\n                                value={content}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">grams</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"promo\" \n                                type=\"number\"\n                                label=\"Promo\" \n                                variant=\"outlined\"\n                                value={promo}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">%</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"storageLife\" \n                                type=\"number\"\n                                label=\"Storage Life\" \n                                variant=\"outlined\"\n                                value={storageLife}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">days</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"categoryId\" \n                                label=\"Category\" \n                                variant=\"outlined\"\n                                value={categoryId}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"type\" \n                                label=\"Type\" \n                                variant=\"outlined\"\n                                value={type}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                multiline\n                                rows={3}\n                                name=\"description\" \n                                label=\"Description\" \n                                variant=\"outlined\"\n                                value={description}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        {error !== null && (\n                            <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                                <Box component=\"div\"\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n                                        backgroundColor: '#f294a5',\n                                        height: 50,\n                                        width: '100%',\n                                        filter: 'brightness(85%)'\n                                    }}\n                                >\n                                    <Typography variant=\"h5\" align=\"center\" color=\"white\">Image is required!</Typography>\n                                </Box>\n                            </Grid>\n                        )}\n                        <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                            <Button type=\"submit\" variant=\"contained\" fullWidth>SAVE PRODUCT</Button> \n                        </Grid>\n                    </Grid>\n                </form>\n            </Card>\n        </>\n    )\n}\n\nexport default ProductForm\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ImageSearchTwoToneIcon from '@mui/icons-material/ImageSearchTwoTone';\nimport { styled } from '@mui/material/styles';\n\ninterface Props {\n    imageFile: Blob,\n    onImageChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    defaultImage: string\n}\n\nconst ProductImgStyle = styled('img')({\n    top: 0,\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    position: 'absolute'\n  });\n\nfunction UploadImage({ imageFile, onImageChange, defaultImage }: Props) {\n    const [imageSource, setImageSource] = React.useState(null);\n\n    React.useEffect(() => {\n        if (imageFile !== null) {\n            let reader = new FileReader();\n            reader.readAsDataURL(imageFile);\n\n            reader.onloadend = function (e) {\n                setImageSource([reader.result]);\n            };\n\n        }\n    }, [imageFile])\n\n    return (\n        <Card sx={{ width: '100%' }}>\n            <Box sx={{ pt: '100%', position: 'relative' }}>\n                <ProductImgStyle \n                    alt=\"product image\" \n                    src={!imageSource ? defaultImage : imageSource} \n                />\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                        startIcon={<ImageSearchTwoToneIcon />}\n                        sx={{\n                            zIndex: 9,\n                            bottom: 16,\n                            right: 16,\n                            position: 'absolute',\n                            textTransform: 'uppercase'\n                        }}\n                    >\n                        Upload Image\n                        <input \n                            type=\"file\" \n                            accept=\"image/png, image/jpeg, image/jpg\"\n                            onChange={event => onImageChange(event)}\n                            hidden \n                        />\n                    </Button>\n            </Box>\n        </Card>\n    )\n}\n\nexport default UploadImage\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { doc, setDoc, collection } from \"firebase/firestore\";\nimport { useFirebaseAuth } from 'src/contexts/FirebaseAuthProvider';\nimport  ProductModel, { ProductInterface } from 'src/models/products';\n\n//icons\nimport CloseIcon from '@mui/icons-material/Close';\n\n//components\nimport UploadImage from './UploadImage';\nimport ProductForm from './ProductForm';\n\nfunction CreateProduct() {\n    const [newProduct, setNewProduct] = useState<ProductInterface>({\n        categoryId: '',\n        content: 0,\n        description: '',\n        image: '',\n        name: '',\n        price: 0,\n        promo: 0,\n        stocks: 0,\n        storageLife: 0,\n        type: ''\n    });\n    const [imageFile, setImageFile] = useState<Blob | null>(null);\n    const [errors, setErrors] = useState<string | null>(null);\n    const { database } = useFirebaseAuth();\n    const navigate = useNavigate();\n\n    const defaultImage = \"https://res.cloudinary.com/nathanalz/image/upload/v1641871922/ButilMNL/sample_img_ve55kv.png\";\n\n    function onTextChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        setNewProduct({ ...newProduct, [event.target.name]: event.target.value });\n    }\n\n    function onNumberChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        setNewProduct({ ...newProduct, [event.target.name]: !isNaN(parseFloat(event.target.value)) ? parseFloat(event.target.value) : '' });\n    }\n\n    function onImageChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setErrors(null);\n        setImageFile(event.target.files[0]);\n    }\n\n    async function uploadProductImage(): Promise<string> {\n        const data = new FormData();\n        data.append('file', imageFile);\n        data.append('upload_preset', 'yys2sx1c');\n        data.append('cloud_name', 'nathanalz');\n\n        const response = await axios.post('https://api.cloudinary.com/v1_1/nathanalz/image/upload', data);\n        const imageUrl = response.data.url;\n        \n        return imageUrl as string;\n    }\n\n    async function onSubmitForm(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n\n        if (!imageFile) {\n            setErrors('Image is required!');\n        } else {\n            const imageUrl = await uploadProductImage();\n\n            const productData = new ProductModel(newProduct);\n            productData.setImage(imageUrl.replace(\"http:\", \"https:\"));\n    \n            const newProductRef = doc(collection(database, \"products\"));\n            setDoc(newProductRef, productData.getProduct()).then(response => {\n                navigate('/dashboards/products');\n            }).catch(error => {\n                console.log((error as Error).message);\n            });\n        }\n    }\n\n    const matches = useMediaQuery('(min-width:600px)');\n\n    return (\n        <>\n            <Helmet>\n                <title>Create Product</title>\n            </Helmet>\n            <Container sx={{ mb: 5 }}>\n                <Box sx={{ \n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginTop: 5,\n                    marginBottom: 3\n                 }}>\n                     <Typography variant=\"h1\" color=\"primary\">Create Product</Typography>\n                     {!matches ? \n                        <IconButton onClick={event => navigate('/dashboards/products')} color=\"error\">\n                            <CloseIcon />\n                        </IconButton>\n                        :\n                        <Button variant=\"contained\" color=\"error\" startIcon={<CloseIcon />} onClick={event => navigate('/dashboards/products')}>\n                            Cancel\n                        </Button> \n                    }\n                     \n                 </Box>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={4}>\n                        <UploadImage \n                            imageFile={imageFile} \n                            onImageChange={event => onImageChange(event)} \n                            defaultImage={defaultImage}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={8}>\n                        <ProductForm \n                            productInfo={newProduct} \n                            onTextChange={event => onTextChange(event)} \n                            onNumberChange={event => onNumberChange(event)}\n                            onSubmitForm={event => onSubmitForm(event)}\n                            error={errors}\n                        />\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nexport default CreateProduct\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.7 11.53c-.7.31-1.45.47-2.21.47C12.46 12 10 9.53 10 6.5c0-.17.01-.34.03-.5H4v14h14v-8.17l-.3-.3zM5.5 18l2.75-3.53 1.96 2.36 2.75-3.54L16.5 18h-11z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10.21 16.83-1.96-2.36L5.5 18h11l-3.54-4.71zM20 6.5C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89c.44-.7.7-1.51.7-2.39zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9zM18 20H4V6h6.03c.06-.72.27-1.39.58-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6.17l-2-2V20z\"\n}, \"1\")], 'ImageSearchTwoTone');\n\nexports.default = _default;"],"names":["ProductModel","product","this","imageUrl","image","convertProductQuerySnapshots","snapshot","productData","data","productQueryData","productId","id","categoryId","content","description","name","price","promo","stocks","storageLife","type","productInfo","onTextChange","onNumberChange","onSubmitForm","error","sx","width","padding","onSubmit","event","container","spacing","item","sm","md","fullWidth","required","label","variant","value","onChange","InputProps","startAdornment","position","endAdornment","multiline","rows","component","display","justifyContent","alignItems","backgroundColor","height","filter","align","color","ProductImgStyle","styled","top","objectFit","imageFile","onImageChange","defaultImage","React","imageSource","setImageSource","reader","FileReader","readAsDataURL","onloadend","e","result","pt","alt","src","startIcon","zIndex","bottom","right","textTransform","accept","hidden","useState","newProduct","setNewProduct","setImageFile","errors","setErrors","database","useFirebaseAuth","navigate","useNavigate","uploadProductImage","FormData","append","axios","response","url","preventDefault","setImage","replace","newProductRef","doc","collection","setDoc","getProduct","then","catch","console","log","message","matches","useMediaQuery","mb","marginTop","marginBottom","onClick","xs","target","files","isNaN","parseFloat","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity"],"sourceRoot":""}