{"version":3,"file":"static/js/126.e96a0238.chunk.js","mappings":"oKAcMA,EAAQC,EAAAA,YAA6C,SACvDC,EACAC,GAEA,OAAO,SAAC,KAAD,QAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OAqBlE,IAlBA,YAAkF,IAA3DI,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,gBAC7CC,EAAc,SAACC,EAAsCC,GACxC,cAAXA,GAIJH,GAAgB,IAGpB,OACI,SAAC,IAAD,CAAUI,KAAMP,EAAcQ,iBAAkB,IAAMC,QAASL,EAA/D,UACI,SAACV,EAAD,CAAOe,QAASL,EAAaM,SAAUT,EAAU,UAAY,QAASU,GAAI,CAAEC,MAAO,QAAnF,SACKV,Q,6ECEXW,EAAAA,WAGF,WAAYC,IAAwB,oBAFpCC,iBAEmC,EAC/BC,KAAKD,YAAcD,EAatB,OAZA,gCAED,WACI,OAAOE,KAAKD,cACf,yBAED,SAAYE,GACRD,KAAKD,YAAYG,SAAWD,IAC/B,0BAED,SAAaA,GACTD,KAAKD,YAAYI,UAAYF,MAChC,EAjBCJ,GAoBC,SAASO,EAA2BC,GACvC,IAAMC,EAAYD,EAASE,OAEvBC,EAA0B,GAC9BF,EAAUG,SAASC,SAAQ,SAAAC,GACvBH,EAAWI,KAAK,CACZC,MAAOF,EAAQE,MACfC,UAAWH,EAAQG,UACnBC,SAAUJ,EAAQI,cAI1B,IAAMC,EAAiC,CACnCC,QAASZ,EAASa,GAClBT,SAAUD,EACVW,SAAU,CACNC,QAASd,EAAUa,SAASC,QAC5BC,SAAUf,EAAUa,SAASE,SAC7BC,QAAShB,EAAUa,SAASG,QAC5BC,MAAOjB,EAAUa,SAASI,MAC1BC,OAAQlB,EAAUa,SAASK,OAC3BC,SAAU,EACVC,UAAW,EACXC,IAAKrB,EAAUa,SAASQ,KAE5BC,UAAWtB,EAAUsB,UACrB1B,SAAUI,EAAUJ,SACpBC,UAAWG,EAAUH,UACrB0B,UAAWvB,EAAUuB,UAAUC,SAC/BC,KAAMzB,EAAUyB,KAChBC,YAAa1B,EAAU0B,YACvBC,aAAc3B,EAAU2B,cAG5B,OAAO,IAAIpC,EAAWmB,K,4EC/EpBkB,EAAAA,WAGF,WAAYC,IAAwB,oBAFpCC,iBAEmC,EAC/BpC,KAAKoC,YAAcD,EAStB,OARA,gCAED,WACI,OAAOnC,KAAKoC,cACf,wBAED,SAAWC,GACPrC,KAAKoC,YAAYC,QAAUA,MAC9B,EAbCH,GAiBC,SAASI,EAA2BjC,GACvC,IAAMkC,EAAYlC,EAASE,OACrBiC,EAAiC,CACnCC,QAASpC,EAASa,GAClBwB,OAAQH,EAAUG,OAClBC,gBAAiBJ,EAAUI,iBAG/B,OAAO,IAAIT,EAAWM,GAG1B,O,6EC5BMI,EAAAA,WAGF,WAAYC,IAA4B,oBAFxCA,gBAEuC,EACnC7C,KAAK6C,WAAaA,EAKrB,OAJA,+BAED,WACI,OAAO7C,KAAK6C,eACf,EATCD,GAYC,SAASE,EAA0BzC,GACtC,IAAM0C,EAAW1C,EAASE,OACpByC,EAA+B,CACjCC,OAAQ5C,EAASa,GACjBE,QAAS2B,EAAS3B,QAClB8B,UAAWH,EAASG,UACpBC,SAAUJ,EAASI,SACnB3B,OAAQuB,EAASvB,QAGrB,OAAO,IAAIoB,EAAUI,K,waCLnBI,EAAgB,CAClB,CACIlC,GAAI,MACJmC,KAAM,OAEV,CACInC,GAAI,OACJmC,KAAM,QAEV,CACInC,GAAI,SACJmC,KAAM,WAqBC,SAASC,EAAT,GAA0D,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aACxC,GAAwBC,EAAAA,EAAAA,UAAiB,GAAzC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAiB,GAA3C,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAkB,CAC5CK,OAAQ,OADZ,eAAOC,EAAP,KAAgBC,EAAhB,KAGA,GAA0CP,EAAAA,EAAAA,UAA2B,IAArE,eAAOQ,EAAP,KAAsBC,EAAtB,KACA,GAA4CT,EAAAA,EAAAA,UAA2B,IAAvE,eAAOU,EAAP,KAAuBC,EAAvB,KACMC,GAAQC,EAAAA,EAAAA,MAEdC,EAAAA,EAAAA,YAAU,WACN,OAAQR,EAAQD,QACZ,IAAK,OACD,IAAMU,EAAejB,EAAMkB,QAAO,SAAAC,GAAI,MAA4B,SAAxBA,EAAKrC,QAAQb,UACvD0C,GAAiB,SAAAS,GAAK,OAAIH,KAC1B,MACJ,IAAK,SACD,IAAMI,EAAiBrB,EAAMkB,QAAO,SAAAC,GAAI,MAA4B,WAAxBA,EAAKrC,QAAQb,UACzD0C,GAAiB,SAAAS,GAAK,OAAIC,KAC1B,MACJ,QACIV,GAAiB,SAAAS,GAAK,OAAIpB,QAEnC,CAACA,EAAOQ,KAEXQ,EAAAA,EAAAA,YAAU,WACN,IAAMM,EAlCU,SACpBC,EACApB,EACAE,GAEA,OAAOkB,EAASC,MAAMrB,EAAOE,EAAOF,EAAOE,EAAQA,GA6B7BoB,CAAgBf,EAAeP,EAAME,GACvDQ,GAAkB,SAAAO,GAAK,OAAIE,OAC5B,CAACnB,EAAME,EAAOK,IAuBjB,OACI,UAACgB,EAAA,EAAD,YAEI,SAACC,EAAA,EAAD,CACIC,QACI,SAACC,EAAA,EAAD,CAAKxF,MAAO,IAAZ,UACA,UAACyF,EAAA,EAAD,CAAaC,WAAS,EAACvG,QAAQ,WAA/B,WACI,SAACwG,EAAA,EAAD,sBACA,SAACC,EAAA,EAAD,CACIvF,MAAO8D,EAAQD,QAAU,MACzB2B,SA/BG,SAACC,GACxB,IAAIzF,EAAQ,KAEW,QAAnByF,EAAEC,OAAO1F,QACXA,EAAQyF,EAAEC,OAAO1F,OAGnB+D,GAAW,SAAC4B,GAAD,eAAC,UACPA,GADM,IAET9B,OAAQ7D,QAuBU4F,MAAM,SACNC,WAAS,EAJb,SAMK1C,EAAc2C,KAAI,SAACC,GAAD,OACf,SAACC,EAAA,EAAD,CAAgChG,MAAO+F,EAAa9E,GAApD,SACC8E,EAAa3C,MADC2C,EAAa9E,cAQ5CgF,MAAM,gBAGV,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,WACA,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,wBACA,SAACA,EAAA,EAAD,oBACA,SAACA,EAAA,EAAD,sBACA,SAACA,EAAA,EAAD,uBACA,SAACA,EAAA,EAAD,qBACA,SAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,2BAGJ,SAACC,EAAA,EAAD,UACKvC,EAAe4B,KAAI,SAAArB,GAChB,OACI,UAAC6B,EAAA,EAAD,CACII,OAAK,EADT,WAII,SAACH,EAAA,EAAD,WACI,SAACI,EAAA,EAAD,CACI7H,QAAQ,QACR8H,WAAW,OACXC,MAAM,eACNC,cAAY,EACZC,QAAM,EALV,SAOKtC,EAAKrC,QAAQY,YAGtB,SAACuD,EAAA,EAAD,WACI,SAACI,EAAA,EAAD,CACI7H,QAAQ,QACR8H,WAAW,OACXC,MAAM,eACNC,cAAY,EACZC,QAAM,EALV,SAOKtC,EAAKrC,QAAQa,UAAY,IAAMwB,EAAKrC,QAAQc,cAGrD,SAACqD,EAAA,EAAD,WACI,SAACI,EAAA,EAAD,CACI7H,QAAQ,QACR8H,WAAW,OACXC,MAAM,eACNC,cAAY,EACZC,QAAM,EALV,SAOKtC,EAAKrC,QAAQb,YAGtB,SAACgF,EAAA,EAAD,WACI,SAACI,EAAA,EAAD,CACI7H,QAAQ,QACR8H,WAAW,OACXC,MAAM,eACNC,cAAY,EACZC,QAAM,EALV,SAOKtC,EAAKrC,QAAQjB,aAGtB,SAACoF,EAAA,EAAD,WACI,SAACI,EAAA,EAAD,CACI7H,QAAQ,QACR8H,WAAW,OACXC,MAAM,eACNC,cAAY,EACZC,QAAM,EALV,SAOKtC,EAAK/B,gBAAgBsE,YAG9B,SAACT,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACI,SAACS,EAAA,EAAD,CAAShB,MAAM,cAAciB,OAAK,EAAlC,UACA,SAACC,EAAA,EAAD,CACIzH,GAAI,CACJ,UAAW,CAAE0H,WAAYhD,EAAMiD,OAAOC,MAAMC,SAC5CV,MAAOzC,EAAMoD,QAAQF,MAAMG,MAE3BZ,MAAM,UACNa,KAAK,QACLC,QAAS,SAAAvI,GAAK,OAAImE,EAAakB,EAAKrC,QAAQY,SAPhD,UASI,SAAC4E,EAAA,EAAD,CAA6BC,SAAS,kBApEzCpD,EAAKrC,QAAQY,mBA8E1C,SAACmC,EAAA,EAAD,CAAK2C,EAAG,EAAR,UACA,SAACC,EAAA,EAAD,CACIC,UAAU,MACVC,MAAOjE,EAAcgD,OACrBkB,aAtIa,SAAC9I,EAAY+I,GAClCzE,EAAQyE,IAsIAC,oBAnIc,SAAChJ,GACvBwE,EAASyE,SAASjJ,EAAMsG,OAAO1F,SAmIvByD,KAAMA,EACN6E,YAAa3E,EACb4E,mBAAoB,CAAC,EAAG,GAAI,GAAI,W,wBCnHhD,MAvGA,WACI,IAAQvH,GAAYwH,EAAAA,EAAAA,MAAZxH,QACAyH,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAsCpF,EAAAA,EAAAA,UAA2B,IAAjE,eAAOqF,EAAP,KAAoBC,EAApB,KACA,GAAsCtF,EAAAA,EAAAA,UAAwB,CAC1DzE,cAAc,EACdC,SAAS,EACTC,QAAS,KAHb,eAAO8J,EAAP,KAAoBC,EAApB,KAKA,GAAwCxF,EAAAA,EAAAA,UAAgC,MAAxE,eAAOyF,EAAP,KAAqBC,EAArB,KA4DA,SAASC,EAAkBnG,IACvBoG,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIZ,EAAU,WAAYzF,GAAS,CAAEN,iBAAiB4G,EAAAA,EAAAA,IAAWL,KAAiBM,MAAK,SAAAC,GAC7FR,GAAe,kBAAKD,GAAN,IAAmBhK,cAAc,EAAMC,SAAS,EAAMC,QAAS,mCAXjFmK,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIZ,EAAU,SAAUzH,GAAU,CAAEf,UAAU,IAAQsJ,MAAK,SAAAC,GACjEb,EAAS,yBACVc,OAAM,SAAAnC,GACL0B,GAAe,kBAAKD,GAAN,IAAmBhK,cAAc,EAAMC,SAAS,EAAOC,QAAS,4BAC9E0J,EAAS,4BASVc,OAAM,SAAAnC,GACL0B,GAAe,kBAAKD,GAAN,IAAmBhK,cAAc,EAAMC,SAAS,EAAOC,QAAS,4BAC9E0J,EAAS,yBAIjB,OApEArE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,uGACgCoF,EAAAA,EAAAA,KAAOL,EAAAA,EAAAA,IAAIZ,EAAU,SAAUzH,IAD/D,QACU2I,EADV,QAGsBC,UACRX,GAAe9I,EAAAA,EAAAA,GAA2BwJ,GAChDT,GAAgB,SAAAxE,GAAK,OAAIuE,EAAaY,eAEtClB,EAAS,QAPjB,4CADY,uBAAC,WAAD,wBAYZkB,KACD,CAACpB,EAAUzH,EAAS2H,KAEvBrE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+FACQwF,EAA8B,GAC9BC,EAA8B,GAFtC,UAGgCC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWxB,EAAU,aAH7D,cAGUkB,EAHV,iBAI6BK,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWxB,EAAU,aAJ1D,cAMehI,SAAQ,SAAC4I,GAChB,IAAMa,GAAe7H,EAAAA,EAAAA,GAA2BgH,GAChDS,EAAUnJ,KAAKuJ,EAAaC,eAGhCR,EAAclJ,SAAQ,SAAC4I,GACnB,IAAMe,GAAcvH,EAAAA,EAAAA,GAA0BwG,GAE9CS,EAAUrJ,SAAQ,SAAAyB,GACd,IAAME,EAAUgI,EAAYC,UAE5B,GAAInI,EAAMM,UAAYJ,EAAQY,OAAQ,CAClC,IAAMsH,EAAa,IAAIrI,EAAAA,EAAWC,GAClCoI,EAAWC,WAAWnI,GAEtB2H,EAAUpJ,KAAK2J,EAAWH,mBAKtCrB,GAAe,SAAApE,GAAK,OAAIqF,KA1B5B,6CADY,uBAAC,WAAD,wBA8BZS,KACD,CAAC/B,KAuBA,iCACA,SAAC,IAAD,WACI,yCAEJ,UAACgC,EAAA,EAAD,YACI,UAACtF,EAAA,EAAD,CAAKzF,GAAI,CACDgL,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,UAAW,EACXC,aAAc,GALtB,WAOI,SAACnE,EAAA,EAAD,CAAY7H,QAAQ,KAAK+H,MAAM,UAA/B,2BACA,SAACkE,EAAA,EAAD,CAAQjM,QAAQ,YAAYkM,WAAW,SAACC,EAAA,EAAD,IAA0BtD,QAAS,SAAAvI,GAAK,OAAIuJ,EAAS,uBAA5F,sBAEJ,SAACtF,EAAD,CAAYC,MAAOuF,EAAatF,aAAc,SAAAP,GAAM,OAAImG,EAAkBnG,UAE9E,SAACkI,EAAA,EAAD,CAAanM,aAAcgK,EAAYhK,aAAcC,QAAS+J,EAAY/J,QAASC,QAAS8J,EAAY9J,QAASC,gBAAiB,SAAAc,GAAK,OAAIgJ,GAAe,kBAAKD,GAAN,IAAmBhK,aAAciB,a,yBCtH9LmL,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iEACD,oBAEJN,EAAQ,EAAUG,G,yBCfdL,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,4CACHC,QAAS,MACR,MAAmB,EAAIL,EAAYG,KAAK,OAAQ,CACjDC,EAAG,kWACF,MAAO,2BAEVN,EAAQ,EAAUG","sources":["components/Snackbar/index.tsx","models/orders.ts","models/rider.ts","models/users.ts","pages/Orders/AssignOrder/RiderTable.tsx","pages/Orders/AssignOrder/index.tsx","../node_modules/@mui/icons-material/ArrowBackTwoTone.js","../node_modules/@mui/icons-material/AssignmentReturnTwoTone.js"],"sourcesContent":["import React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nexport interface SnackbarProps {\n    openSnackbar: boolean,\n    success: boolean,\n    message: string\n}\n\ninterface Props extends SnackbarProps {\n    setOpenSnackbar: (value: boolean) => void\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction SnackbarApp({ openSnackbar, success, message, setOpenSnackbar }: Props) {\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpenSnackbar(false);\n    };\n\n    return (\n        <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity={success ? 'success' : 'error'} sx={{ width: '100%' }}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nexport default SnackbarApp\n","import { DocumentSnapshot } from 'firebase/firestore';\n\ninterface OrderItem {\n    price: number;\n    productId: string;\n    quantity: number;\n}\n\ninterface CustomerInterface {\n    contact: string;\n    userName: string;\n    address?: string;\n    email?: string;\n    gender?: string;\n    latitude?: number;\n    longitude?: number;\n    uid?: string;\n}\n\nexport interface OrderInterface {\n    orderId: string;\n    contents: OrderItem[];\n    customer: CustomerInterface;\n    amountDue: number;\n    assigned: boolean;\n    delivered: boolean;\n    orderDate: Date | string;\n    paid: boolean;\n    paymentType: string;\n    paymentProof: string;\n    latitude?: number;\n    longitude?: number;\n    userId?: string;\n}\n\nclass OrderModel {\n    orderObject: OrderInterface;\n\n    constructor(order: OrderInterface) {\n        this.orderObject = order;\n    }\n\n    getOrder(): OrderInterface {\n        return this.orderObject;\n    }\n\n    setAssigned(value: boolean) {\n        this.orderObject.assigned = value;\n    }\n\n    setDelivered(value: boolean) {\n        this.orderObject.delivered = value;\n    }\n}\n\nexport function convertOrderQuerySnapshots(snapshot: DocumentSnapshot) {\n    const orderData = snapshot.data();\n\n    let orderItems: OrderItem[] = []\n    orderData.contents.forEach(content => {\n        orderItems.push({\n            price: content.price,\n            productId: content.productId,\n            quantity: content.quantity\n        })\n    });\n\n    const orderQueryData: OrderInterface = {\n        orderId: snapshot.id,\n        contents: orderItems,\n        customer: {\n            contact: orderData.customer.contact,\n            userName: orderData.customer.userName,\n            address: orderData.customer.address,\n            email: orderData.customer.email,\n            gender: orderData.customer.gender,\n            latitude: 0,\n            longitude: 0,\n            uid: orderData.customer.uid,\n        },\n        amountDue: orderData.amountDue,\n        assigned: orderData.assigned,\n        delivered: orderData.delivered,\n        orderDate: orderData.orderDate.toDate(),\n        paid: orderData.paid,\n        paymentType: orderData.paymentType,\n        paymentProof: orderData.paymentProof\n    }\n\n    return new OrderModel(orderQueryData);\n}\n\nexport default OrderModel;","import { DocumentSnapshot } from 'firebase/firestore';\nimport { UserInterface } from './users';\n\nexport interface RiderInterface {\n    account?: UserInterface;\n    riderId?: string;\n    active: boolean;\n    assignedDeliver?: string[];\n}\n\nclass RiderModel {\n    riderObject: RiderInterface;\n\n    constructor(rider: RiderInterface) {\n        this.riderObject = rider;\n    }\n\n    getRider(): RiderInterface {\n        return this.riderObject;\n    }\n\n    setAccount(account: UserInterface) {\n        this.riderObject.account = account;\n    }\n\n}\n\nexport function convertRiderQuerySnapshots(snapshot: DocumentSnapshot) {\n    const riderData = snapshot.data();\n    const riderQueryData: RiderInterface = {\n        riderId: snapshot.id,\n        active: riderData.active,\n        assignedDeliver: riderData.assignedDeliver\n    };\n\n    return new RiderModel(riderQueryData);\n}\n\nexport default RiderModel;","import { DocumentSnapshot } from 'firebase/firestore';\n\nexport interface UserInterface {\n    userId?: string;\n    contact: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n}\n\nclass UserModel {\n    userObject: UserInterface;\n\n    constructor(userObject: UserInterface) {\n        this.userObject = userObject;\n    }\n\n    getUser(): UserInterface {\n        return this.userObject;\n    }\n}\n\nexport function convertUserQuerySnapshots(snapshot: DocumentSnapshot) {\n    const userData = snapshot.data();\n    const userQueryData: UserInterface = {\n        userId: snapshot.id,\n        contact: userData.contact,\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        gender: userData.gender\n    };\n\n    return new UserModel(userQueryData);\n}\n\nexport default UserModel;","import React, { useState, useEffect } from 'react';\nimport {\n    Tooltip,\n    Divider,\n    Box,\n    FormControl,\n    InputLabel,\n    Card,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TablePagination,\n    TableRow,\n    TableContainer,\n    Select,\n    MenuItem,\n    Typography,\n    useTheme,\n    CardHeader\n  } from '@mui/material';\nimport AssignmentReturnTwoToneIcon from '@mui/icons-material/AssignmentReturnTwoTone';\nimport { RiderInterface } from 'src/models/rider';\n\ntype UserGender = 'male' | 'female';\n\nconst statusOptions = [\n    {\n        id: 'all',\n        name: 'All'\n    },\n    {\n        id: 'male',\n        name: 'Male'\n    },\n    {\n        id: 'female',\n        name: 'Female'\n    }\n];\n\ninterface Filters {\n    status?: UserGender;\n}\n\ninterface TableProps {\n    users: RiderInterface[],\n    demoteToUser: (riderId: string) => void\n}\n\nconst applyPagination = (\n    userList: RiderInterface[],\n    page: number,\n    limit: number\n  ): RiderInterface[] => {\n    return userList.slice(page * limit, page * limit + limit);\n}\n\nexport default function RiderTable({ users, demoteToUser }: TableProps) {\n    const [page, setPage] = useState<number>(0);\n    const [limit, setLimit] = useState<number>(5);\n    const [filters, setFilters] = useState<Filters>({\n        status: null\n    });\n    const [filteredUsers, setFilteredUsers] = useState<RiderInterface[]>([]);\n    const [paginatedUsers, setPaginatedUsers] = useState<RiderInterface[]>([]);\n    const theme = useTheme();\n\n    useEffect(() => {\n        switch (filters.status) {\n            case 'male':\n                const newMaleArray = users.filter(user => user.account.gender === 'Male');\n                setFilteredUsers(state => newMaleArray);\n                break;\n            case 'female':\n                const newFemaleArray = users.filter(user => user.account.gender === 'Female');\n                setFilteredUsers(state => newFemaleArray);\n                break;\n            default: \n                setFilteredUsers(state => users);\n        }\n    }, [users, filters])\n\n    useEffect(() => {\n        const pageUsers = applyPagination(filteredUsers, page, limit);\n        setPaginatedUsers(state => pageUsers)\n    }, [page, limit, filteredUsers])\n\n    const handleStatusChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        let value = null;\n    \n        if (e.target.value !== 'all') {\n          value = e.target.value;\n        }\n    \n        setFilters((prevFilters) => ({\n          ...prevFilters,\n          status: value\n        }));\n    };\n\n    const handlePageChange = (event: any, newPage: number): void => {\n        setPage(newPage);\n    }\n    \n    const handleLimitChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setLimit(parseInt(event.target.value));\n    }\n\n    return (\n        <Card>\n            \n            <CardHeader\n                action={\n                    <Box width={150}>\n                    <FormControl fullWidth variant=\"outlined\">\n                        <InputLabel>Status</InputLabel>\n                        <Select\n                            value={filters.status || 'all'}\n                            onChange={handleStatusChange}\n                            label=\"Status\"\n                            autoWidth\n                        >\n                            {statusOptions.map((statusOption) => (\n                                <MenuItem key={statusOption.id} value={statusOption.id}>\n                                {statusOption.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    </Box>\n                }\n                title=\"Rider List\"\n            />\n        \n            <Divider />\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                    <TableRow>\n                        <TableCell>Rider ID</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Gender</TableCell>\n                        <TableCell>Contact</TableCell>\n                        <TableCell>Queue</TableCell>\n                        <TableCell align=\"right\">Actions</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {paginatedUsers.map(user => {\n                            return (\n                                <TableRow\n                                    hover\n                                    key={user.account.userId}\n                                >\n                                    <TableCell>\n                                        <Typography\n                                            variant=\"body1\"\n                                            fontWeight=\"bold\"\n                                            color=\"text.primary\"\n                                            gutterBottom\n                                            noWrap\n                                        >\n                                            {user.account.userId}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography\n                                            variant=\"body1\"\n                                            fontWeight=\"bold\"\n                                            color=\"text.primary\"\n                                            gutterBottom\n                                            noWrap\n                                        >\n                                            {user.account.firstName + ' ' + user.account.lastName}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography\n                                            variant=\"body1\"\n                                            fontWeight=\"bold\"\n                                            color=\"text.primary\"\n                                            gutterBottom\n                                            noWrap\n                                        >\n                                            {user.account.gender}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography\n                                            variant=\"body1\"\n                                            fontWeight=\"bold\"\n                                            color=\"text.primary\"\n                                            gutterBottom\n                                            noWrap\n                                        >\n                                            {user.account.contact}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography\n                                            variant=\"body1\"\n                                            fontWeight=\"bold\"\n                                            color=\"text.primary\"\n                                            gutterBottom\n                                            noWrap\n                                        >\n                                            {user.assignedDeliver.length}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Tooltip title=\"Asign Order\" arrow>\n                                        <IconButton\n                                            sx={{\n                                            '&:hover': { background: theme.colors.error.lighter },\n                                            color: theme.palette.error.main\n                                            }}\n                                            color=\"inherit\"\n                                            size=\"small\"\n                                            onClick={event => demoteToUser(user.account.userId)}\n                                        >\n                                            <AssignmentReturnTwoToneIcon fontSize=\"small\" />\n                                        </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Box p={2}>\n            <TablePagination\n                component=\"div\"\n                count={filteredUsers.length}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleLimitChange}\n                page={page}\n                rowsPerPage={limit}\n                rowsPerPageOptions={[5, 10, 25, 30]}\n            />\n            </Box>\n        </Card>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useNavigate, useParams } from 'react-router-dom';\n\n//firestore\nimport { useFirebaseAuth } from 'src/contexts/FirebaseAuthProvider';\nimport { collection, getDocs, updateDoc, getDoc, doc, arrayUnion } from \"firebase/firestore\"; \nimport { convertUserQuerySnapshots } from 'src/models/users';\nimport RiderModel, { RiderInterface, convertRiderQuerySnapshots } from 'src/models/rider';\nimport { OrderInterface, convertOrderQuerySnapshots } from 'src/models/orders';\n\n//componets\nimport RiderTable from './RiderTable';\nimport SnackbarApp, { SnackbarProps } from 'src/components/Snackbar';\n\n//icons\nimport ArrowBackTwoToneIcon from '@mui/icons-material/ArrowBackTwoTone';\n\nfunction RiderAssignList() {\n    const { orderId } = useParams();\n    const { database } = useFirebaseAuth();\n    const navigate = useNavigate();\n    const [butilRiders, setButilRiders] = useState<RiderInterface[]>([]);\n    const [snackbarApp, setSnackBarApp] = useState<SnackbarProps>({\n        openSnackbar: false,\n        success: true,\n        message: ''\n    });\n    const [currentOrder, setCurrentOrder] = useState<OrderInterface | null>(null);\n\n    useEffect(() => {\n        async function getOrder() {\n            const querySnapshot = await getDoc(doc(database, \"orders\", orderId));\n\n            if (querySnapshot.exists()) {\n                const currentOrder = convertOrderQuerySnapshots(querySnapshot);\n                setCurrentOrder(state => currentOrder.getOrder());\n            } else {\n                navigate('/404');\n            }\n        }\n\n        getOrder();\n    }, [database, orderId, navigate]);\n\n    useEffect(() => {\n        async function getUsers() {\n            let riderList: RiderInterface[] = [];\n            let finalList: RiderInterface[] = [];\n            const querySnapshot = await getDocs(collection(database, \"accounts\"));\n            const riderQuery = await getDocs(collection(database, \"delivery\"));\n\n            riderQuery.forEach((doc) => {\n                const currentRider = convertRiderQuerySnapshots(doc);\n                riderList.push(currentRider.getRider());\n            })\n\n            querySnapshot.forEach((doc) => {\n                const currentUser = convertUserQuerySnapshots(doc);\n                \n                riderList.forEach(rider => {\n                    const account = currentUser.getUser();\n\n                    if (rider.riderId === account.userId) {\n                        const riderModel = new RiderModel(rider);\n                        riderModel.setAccount(account);\n\n                        finalList.push(riderModel.getRider());\n                    }\n                })\n            });\n\n            setButilRiders(state => finalList);\n        }\n\n        getUsers();\n    }, [database]);\n\n    function updateOrderAssigned() {\n        updateDoc(doc(database, \"orders\", orderId), { assigned: true }).then(result => {\n            navigate('/dashboards/orders');\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to assign user.' });\n            navigate('/dashboards/orders');\n        });\n        \n    }\n\n    function demoteRiderToUser(userId: string) {\n        updateDoc(doc(database, \"delivery\", userId), { assignedDeliver: arrayUnion(currentOrder) }).then(result => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: true, message: 'Assigned order successfully!' });\n            updateOrderAssigned();\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to assign user.' });\n            navigate('/dashboards/orders');\n        }) \n    }\n\n    return (\n        <>\n        <Helmet>\n            <title>Riders</title>\n        </Helmet>\n        <Container>\n            <Box sx={{ \n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginTop: 5,\n                    marginBottom: 3\n                }}>\n                <Typography variant=\"h1\" color=\"primary\">Choose Rider</Typography>\n                <Button variant=\"contained\" startIcon={<ArrowBackTwoToneIcon />} onClick={event => navigate('/dashboards/orders')}>Back</Button>\n            </Box>\n            <RiderTable users={butilRiders} demoteToUser={userId => demoteRiderToUser(userId)} />\n        </Container>\n        <SnackbarApp openSnackbar={snackbarApp.openSnackbar} success={snackbarApp.success} message={snackbarApp.message} setOpenSnackbar={value => setSnackBarApp({ ...snackbarApp, openSnackbar: value })} />\n        </>\n    )\n}\n\nexport default RiderAssignList\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBackTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 5v14h14V5H5zm11 9h-4v3l-5-5 5-5v3h4v4z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 7-5 5 5 5v-3h4v-4h-4zm7-4h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-.14 0-.27.01-.4.04-.39.08-.74.28-1.01.55-.18.18-.33.4-.43.64S3 4.72 3 5v14c0 .27.06.54.16.78s.25.45.43.64c.27.27.62.47 1.01.55.13.02.26.03.4.03h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7-.25c.41 0 .75.34.75.75s-.34.75-.75.75-.75-.34-.75-.75.34-.75.75-.75zM19 19H5V5h14v14z\"\n}, \"1\")], 'AssignmentReturnTwoTone');\n\nexports.default = _default;"],"names":["Alert","React","props","ref","elevation","variant","openSnackbar","success","message","setOpenSnackbar","handleClose","event","reason","open","autoHideDuration","onClose","severity","sx","width","OrderModel","order","orderObject","this","value","assigned","delivered","convertOrderQuerySnapshots","snapshot","orderData","data","orderItems","contents","forEach","content","push","price","productId","quantity","orderQueryData","orderId","id","customer","contact","userName","address","email","gender","latitude","longitude","uid","amountDue","orderDate","toDate","paid","paymentType","paymentProof","RiderModel","rider","riderObject","account","convertRiderQuerySnapshots","riderData","riderQueryData","riderId","active","assignedDeliver","UserModel","userObject","convertUserQuerySnapshots","userData","userQueryData","userId","firstName","lastName","statusOptions","name","RiderTable","users","demoteToUser","useState","page","setPage","limit","setLimit","status","filters","setFilters","filteredUsers","setFilteredUsers","paginatedUsers","setPaginatedUsers","theme","useTheme","useEffect","newMaleArray","filter","user","state","newFemaleArray","pageUsers","userList","slice","applyPagination","Card","CardHeader","action","Box","FormControl","fullWidth","InputLabel","Select","onChange","e","target","prevFilters","label","autoWidth","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","hover","Typography","fontWeight","color","gutterBottom","noWrap","length","Tooltip","arrow","IconButton","background","colors","error","lighter","palette","main","size","onClick","AssignmentReturnTwoTone","fontSize","p","TablePagination","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","useParams","database","useFirebaseAuth","navigate","useNavigate","butilRiders","setButilRiders","snackbarApp","setSnackBarApp","currentOrder","setCurrentOrder","demoteRiderToUser","updateDoc","doc","arrayUnion","then","result","catch","getDoc","querySnapshot","exists","getOrder","riderList","finalList","getDocs","collection","currentRider","getRider","currentUser","getUser","riderModel","setAccount","getUsers","Container","display","justifyContent","alignItems","marginTop","marginBottom","Button","startIcon","ArrowBackTwoTone","Snackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity"],"sourceRoot":""}