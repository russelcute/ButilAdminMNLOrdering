{"version":3,"file":"static/js/551.6611a3f8.chunk.js","mappings":"oKAcMA,EAAQC,EAAAA,YAA6C,SACvDC,EACAC,GAEA,OAAO,SAAC,KAAD,QAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OAqBlE,IAlBA,YAAkF,IAA3DI,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,gBAC7CC,EAAc,SAACC,EAAsCC,GACxC,cAAXA,GAIJH,GAAgB,IAGpB,OACI,SAAC,IAAD,CAAUI,KAAMP,EAAcQ,iBAAkB,IAAMC,QAASL,EAA/D,UACI,SAACV,EAAD,CAAOe,QAASL,EAAaM,SAAUT,EAAU,UAAY,QAASU,GAAI,CAAEC,MAAO,QAAnF,SACKV,Q,6ECjBXW,EAAAA,WAGF,WAAYC,IAA4B,oBAFxCA,aAEuC,EACnCC,KAAKD,QAAUA,EASlB,OARA,kCAED,WACI,OAAOC,KAAKD,UACf,sBAED,SAASE,GACLD,KAAKD,QAAQG,MAAQD,MACxB,EAbCH,GAgBC,SAASK,EAA6BC,GACzC,IAAMC,EAAcD,EAASE,OACzBC,EAAqC,CACrCC,UAAWJ,EAASK,GACpBC,WAAYL,EAAYK,WACxBC,QAASN,EAAYM,QACrBC,YAAaP,EAAYO,YACzBV,MAAOG,EAAYH,MACnBW,KAAMR,EAAYQ,KAClBC,MAAOT,EAAYS,MACnBC,MAAOV,EAAYU,MACnBC,OAAQX,EAAYW,OACpBC,YAAaZ,EAAYY,YACzBC,KAAMb,EAAYa,MAGtB,OAAO,IAAIpB,EAAaS,GAG5B,O,+GCwHA,IAzJA,YAAiG,IAA1EY,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,aAAcC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,MACpEb,EAAoFS,EAApFT,WAAYC,EAAwEQ,EAAxER,QAASC,EAA+DO,EAA/DP,YAAaC,EAAkDM,EAAlDN,KAAMC,EAA4CK,EAA5CL,MAAOC,EAAqCI,EAArCJ,MAAOC,EAA8BG,EAA9BH,OAAQC,EAAsBE,EAAtBF,YAAaC,EAASC,EAATD,KAEnF,OACI,+BACI,SAAC,IAAD,CAAMtB,GAAI,CAAEC,MAAO,OAAQ2B,QAAS,GAApC,UACI,iBAAMC,SAAU,SAAAnC,GAAK,OAAIgC,EAAahC,IAAtC,UACI,UAAC,KAAD,CAAMoC,WAAS,EAACC,QAAS,EAAzB,WACI,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,OACLoB,MAAM,eACNjD,QAAQ,WACRkD,MAAOrB,EACPsB,SAAU,SAAA7C,GAAK,OAAI8B,EAAa9B,SAGxC,SAAC,KAAD,CAAMsC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,QACLK,KAAK,SACLe,MAAM,QACNjD,QAAQ,WACRkD,MAAOpB,EACPqB,SAAU,SAAA7C,GAAK,OAAI+B,EAAe/B,IAClC8C,WAAY,CACRC,gBAAgB,SAAC,IAAD,CAAgBC,SAAS,QAAzB,0BAI5B,SAAC,KAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,SACLK,KAAK,SACLe,MAAM,SACNjD,QAAQ,WACRkD,MAAOlB,EACPmB,SAAU,SAAA7C,GAAK,OAAI+B,EAAe/B,SAG1C,SAAC,KAAD,CAAMsC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,UACLK,KAAK,SACLe,MAAM,UACNjD,QAAQ,WACRkD,MAAOvB,EACPwB,SAAU,SAAA7C,GAAK,OAAI+B,EAAe/B,IAClC8C,WAAY,CACRG,cAAc,SAAC,IAAD,CAAgBD,SAAS,MAAzB,yBAI1B,SAAC,KAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,QACLK,KAAK,SACLe,MAAM,QACNjD,QAAQ,WACRkD,MAAOnB,EACPoB,SAAU,SAAA7C,GAAK,OAAI+B,EAAe/B,IAClC8C,WAAY,CACRG,cAAc,SAAC,IAAD,CAAgBD,SAAS,MAAzB,qBAI1B,SAAC,KAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,cACLK,KAAK,SACLe,MAAM,eACNjD,QAAQ,WACRkD,MAAOjB,EACPkB,SAAU,SAAA7C,GAAK,OAAI+B,EAAe/B,IAClC8C,WAAY,CACRG,cAAc,SAAC,IAAD,CAAgBD,SAAS,MAAzB,wBAI1B,SAAC,KAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,aACLoB,MAAM,WACNjD,QAAQ,WACRkD,MAAOxB,EACPyB,SAAU,SAAA7C,GAAK,OAAI8B,EAAa9B,SAGxC,SAAC,KAAD,CAAMsC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGlC,GAAI,CAAEC,MAAO,QAAvC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRnB,KAAK,OACLoB,MAAM,OACNjD,QAAQ,WACRkD,MAAOhB,EACPiB,SAAU,SAAA7C,GAAK,OAAI8B,EAAa9B,SAGxC,SAAC,KAAD,CAAMsC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIlC,GAAI,CAAEC,MAAO,QAAxC,UACI,SAAC,IAAD,CACIkC,WAAS,EACTC,UAAQ,EACRQ,WAAS,EACTC,KAAM,EACN5B,KAAK,cACLoB,MAAM,cACNjD,QAAQ,WACRkD,MAAOtB,EACPuB,SAAU,SAAA7C,GAAK,OAAI8B,EAAa9B,QAG7B,OAAViC,IACG,SAAC,KAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIlC,GAAI,CAAEC,MAAO,QAAxC,UACI,SAAC,IAAD,CAAK6C,UAAU,MACX9C,GAAI,CACA+C,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,UACjBC,OAAQ,GACRlD,MAAO,OACPmD,OAAQ,mBARhB,UAWI,SAAC,IAAD,CAAYhE,QAAQ,KAAKiE,MAAM,SAASC,MAAM,QAA9C,qCAIZ,SAAC,KAAD,CAAMtB,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIlC,GAAI,CAAEC,MAAO,QAAxC,UACI,SAAC,IAAD,CAAQqB,KAAK,SAASlC,QAAQ,YAAY+C,WAAS,EAAnD,uC,oGCrJtBoB,GAAkBC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClCC,IAAK,EACLxD,MAAO,OACPkD,OAAQ,OACRO,UAAW,QACXhB,SAAU,aAkDd,IA/CA,YAAyE,IAAlDiB,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,aAC7C,EAAsC7E,EAAAA,SAAe,MAArD,eAAO8E,EAAP,KAAoBC,EAApB,KAcA,OAZA/E,EAAAA,WAAgB,WACZ,GAAkB,OAAd2E,EAAoB,CACpB,IAAIK,EAAS,IAAIC,WACjBD,EAAOE,cAAcP,GAErBK,EAAOG,UAAY,SAAUC,GACzBL,EAAe,CAACC,EAAOK,aAIhC,CAACV,KAGA,SAAC,IAAD,CAAM3D,GAAI,CAAEC,MAAO,QAAnB,UACI,UAAC,IAAD,CAAKD,GAAI,CAAEsE,GAAI,OAAQ5B,SAAU,YAAjC,WACI,SAACa,EAAD,CACIgB,IAAI,gBACJC,IAAMV,GAAcD,KAEpB,UAAC,IAAD,CACIzE,QAAQ,YACR0D,UAAU,QACV2B,WAAW,SAAC,IAAD,IACXzE,GAAI,CACA0E,OAAQ,EACRC,OAAQ,GACRC,MAAO,GACPlC,SAAU,WACVmC,cAAe,aATvB,0BAaI,kBACIvD,KAAK,OACLwD,OAAO,mCACPvC,SAAU,SAAA7C,GAAK,OAAIkE,EAAclE,IACjCqF,QAAM,c,saC3D3B,SAASC,EAAiCC,GAC/C,OAAOC,EAAAA,EAAAA,GAAqB,uBAAwBD,IAErBE,E,QAAAA,GAAuB,uBAAwB,CAAC,SAAjF,I,SCFMC,EAAY,CAAC,YAqBbC,GAAwB7B,EAAAA,EAAAA,IAAO8B,EAAAA,EAAY,CAC/CC,kBAAmB,SAAAC,GAAI,OAAIC,EAAAA,EAAAA,IAAsBD,IAAkB,YAATA,GAC1DvE,KAAM,uBACNgE,KAAM,OACNS,kBAAmB,SAACzG,EAAO0G,GAAR,OAAmBA,EAAOC,OAJjBpC,CAK3B,IA2CH,EA1CuCxE,EAAAA,YAAiB,SAA2B6G,EAAS3G,GAC1F,IAAMD,GAAQ6G,EAAAA,EAAAA,GAAc,CAC1B7G,MAAO4G,EACP5E,KAAM,yBAGF8E,GAAaC,EAAAA,EAAAA,GAA8B/G,EAAOmG,GAElDa,EAzBkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKIC,GAAkBC,EAAAA,EAAAA,GAHV,CACZP,KAAM,CAAC,SAEqCZ,EAAkCiB,GAChF,OAAOG,EAAAA,EAAAA,GAAS,GAAIH,EAASC,GAiBbG,CAAkBN,GAClC,OAAoBO,EAAAA,EAAAA,KAAKjB,GAAuBe,EAAAA,EAAAA,GAAS,CACvDtD,UAAW,IACX1D,QAAS,QACTkE,MAAO,iBACPpE,IAAKA,EACL6G,WAAYA,GACX9G,EAAO,CACRgH,QAASA,Q,UCDb,MA9BA,YAA6E,IAApDM,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,cAChD,SAAShH,IACL+G,GAAc,GAGlB,OACI,UAACE,EAAA,EAAD,CACI9G,KAAM2G,EACNzG,QAASL,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,WAMI,SAACkH,EAAA,EAAD,CAAa9F,GAAG,qBAAhB,SACC,mDAED,SAAC+F,EAAA,EAAD,WACA,SAAC,EAAD,CAAmB/F,GAAG,2BAAtB,oJAIA,UAACgG,EAAA,EAAD,YACA,SAACC,EAAA,EAAD,CAAQC,QAAStH,EAAjB,qBACA,SAACqH,EAAA,EAAD,CAAQC,QAASN,EAAenD,MAAM,QAAQ0D,WAAS,EAAvD,2B,UCiKZ,MAxKA,WACI,IAAQnG,GAAOoG,EAAAA,EAAAA,MAAPpG,GACAqG,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,UAA2B,CACrD1G,UAAW,GACXE,WAAY,GACZC,QAAS,EACTC,YAAa,GACbV,MAAO,GACPW,KAAM,GACNC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,YAAa,EACbC,KAAM,KAXV,eAAOnB,EAAP,KAAgBoH,EAAhB,KAaA,GAAkCD,EAAAA,EAAAA,UAAsB,MAAxD,eAAO3D,EAAP,KAAkB6D,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAwB,MAApD,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsCJ,EAAAA,EAAAA,UAAwB,CAC1DjI,cAAc,EACdC,SAAS,EACTC,QAAS,KAHb,eAAOoI,EAAP,KAAoBC,EAApB,KAKA,GAAgDN,EAAAA,EAAAA,WAAS,GAAzD,eAAOO,EAAP,KAAyBC,EAAzB,KACA,GAAwCR,EAAAA,EAAAA,UAAiB,gGAAzD,eAAOzD,EAAP,KAAqBkE,EAArB,KA1BmB,SA6DJC,KA7DI,0EA6DnB,+FACUtH,EAAO,IAAIuH,UACZC,OAAO,OAAQvE,GACpBjD,EAAKwH,OAAO,gBAAiB,YAC7BxH,EAAKwH,OAAO,aAAc,aAJ9B,SAM2BC,IAAAA,KAAW,yDAA0DzH,GANhG,cAMU0H,EANV,OAOU/H,EAAW+H,EAAS1H,KAAK2H,IAPnC,kBASWhI,GATX,4CA7DmB,gEAyEnB,WAA4BX,GAA5B,gFACIA,EAAM4I,iBACFjI,EAAWwD,EAEG,OAAdF,EAJR,gCAK0BqE,KAL1B,OAKcK,EALd,OAMQhI,EAAWgI,EAAIE,QAAQ,QAAS,UANxC,QASU9H,EAAc,IAAIP,EAAAA,EAAaC,IACzBqI,SAASnI,GAEfoI,GAAgBC,EAAAA,EAAAA,IAAIxB,EAAU,WAAYrG,IAChD8H,EAAAA,EAAAA,IAAOF,EAAehI,EAAYmI,cAAcC,MAAK,SAAAT,GACjDR,GAAe,kBAAKD,GAAN,IAAmBtI,cAAc,EAAMC,SAAS,EAAMC,QAAS,sCAC7E6H,EAAS,2BACV0B,OAAM,SAAAnH,GACLiG,GAAe,kBAAKD,GAAN,IAAmBtI,cAAc,EAAMC,SAAS,EAAOC,QAAS,6BAC9EwJ,QAAQC,IAAKrH,EAAgBpC,YAlBrC,6CAzEmB,gEAgGnB,+EACI0J,EAAAA,EAAAA,KAAUP,EAAAA,EAAAA,IAAIxB,EAAU,WAAYrG,IAAKgI,MAAK,SAAAT,GAC1CR,GAAe,kBAAKD,GAAN,IAAmBtI,cAAc,EAAMC,SAAS,EAAMC,QAAS,mCAC7E6H,EAAS,2BACV0B,OAAM,SAAAnH,GACLiG,GAAe,kBAAKD,GAAN,IAAmBtI,cAAc,EAAMC,SAAS,EAAOC,QAAS,+BAC9EwJ,QAAQC,IAAKrH,EAAgBpC,YANrC,4CAhGmB,sBA4BnBP,EAAAA,WAAgB,WAAM,wCAClB,+FACUkK,GAAaR,EAAAA,EAAAA,IAAIxB,EAAU,WAAYrG,GADjD,UAE8BsI,EAAAA,EAAAA,IAAOD,GAFrC,QAEUE,EAFV,QAIoBC,UACNC,GAAiB/I,EAAAA,EAAAA,GAA6B6I,GAEpD7B,GAAW,SAAAgC,GAAK,OAAID,EAAeV,gBACnCb,GAAgB,SAAAwB,GAAK,OAAID,EAAeV,aAAatI,UAGrD8G,EAAS,QAXjB,4CADkB,uBAAC,WAAD,wBAgBlBwB,KAED,CAAC/H,EAAIqG,EAAUE,IA4DlB,IAAMoC,IAAUC,EAAAA,EAAAA,GAAc,qBAE9B,OACI,iCACI,SAAC,IAAD,WACI,+CAEJ,UAACC,EAAA,EAAD,CAAW1J,GAAI,CAAE2J,GAAI,GAArB,WACI,UAACC,EAAA,EAAD,CAAK5J,GAAI,CACL+C,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZ4G,UAAW,EACXC,aAAc,GALlB,WAOK,SAACxE,EAAA,EAAD,CAAYlG,QAAQ,KAAKkE,MAAM,UAA/B,2BACA,UAACyG,EAAA,EAAD,CAAOC,UAAU,MAAMjI,QAAS,EAAhC,UACKyH,IAKE,SAAC1C,EAAA,EAAD,CAAQ1H,QAAQ,YAAYkE,MAAM,QAAQmB,WAAW,SAACwF,EAAA,EAAD,IAAelD,QAAS,SAAArH,GAAK,OAAI0H,EAAS,yBAA/F,qBAJA,SAAC8C,EAAA,EAAD,CAAYnD,QAAS,SAAArH,GAAK,OAAI0H,EAAS,yBAAyB9D,MAAM,QAAtE,UACI,SAAC2G,EAAA,EAAD,MAONT,IAKE,SAAC1C,EAAA,EAAD,CAAQ1H,QAAQ,YAAYkE,MAAM,QAAQmB,WAAW,SAAC0F,EAAA,EAAD,IAAgBpD,QAAS,SAAArH,GAAK,OAAIoI,GAAoB,IAA3G,qBAJA,SAACoC,EAAA,EAAD,CAAYnD,QAAS,SAAArH,GAAK,OAAIoI,GAAoB,IAAOxE,MAAM,QAA/D,UACI,SAAC6G,EAAA,EAAD,aAShB,UAACC,EAAA,GAAD,CAAMtI,WAAS,EAACC,QAAS,EAAzB,WACI,SAACqI,EAAA,GAAD,CAAMpI,MAAI,EAACqI,GAAI,GAAInI,GAAI,EAAvB,UACI,SAACoI,EAAA,EAAD,CACI3G,UAAWA,EACXC,cAAe,SAAAlE,GAAK,OA3F5C,SAAuBA,GACnBgI,EAAU,MACVF,EAAa9H,EAAM6K,OAAOC,MAAM,IAyFY5G,CAAclE,IACtCmE,aAAcA,OAGtB,SAACuG,EAAA,GAAD,CAAMpI,MAAI,EAACqI,GAAI,GAAInI,GAAI,EAAvB,UACI,SAACuI,EAAA,EAAD,CACIlJ,YAAapB,EACbqB,aAAc,SAAA9B,GAAK,OA1G3C,SAAsBA,GAClB6H,GAAW,kBAAKpH,GAAN,cAAgBT,EAAM6K,OAAOtJ,KAAOvB,EAAM6K,OAAOjI,SAyGhBd,CAAa9B,IACpC+B,eAAgB,SAAA/B,GAAK,OAvG7C,SAAwBA,GACpB6H,GAAW,kBAAKpH,GAAN,cAAgBT,EAAM6K,OAAOtJ,KAAQyJ,MAAMC,WAAWjL,EAAM6K,OAAOjI,QAA2C,GAAjCqI,WAAWjL,EAAM6K,OAAOjI,UAsGlEb,CAAe/B,IACxCgC,aAAc,SAAAhC,GAAK,OA5JxB,4CA4J4BgC,CAAahC,IACpCiC,MAAO8F,aAKvB,SAACmD,EAAA,EAAD,CAAavL,aAAcsI,EAAYtI,aAAcC,QAASqI,EAAYrI,QAASC,QAASoI,EAAYpI,QAASC,gBAAiB,SAAA8C,GAAK,OAAIsF,GAAe,kBAAKD,GAAN,IAAmBtI,aAAciD,SAC1L,SAAC,EAAD,CAAeiE,WAAYsB,EAAkBrB,cAAe,SAAAlE,GAAK,OAAIwF,EAAoBxF,IAAQmE,cAAe,kBAnKrG,2CAmK2GA,W,yBC9L9HoE,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJN,EAAQ,EAAUG","sources":["components/Snackbar/index.tsx","models/products.ts","pages/Products/create/ProductForm.tsx","pages/Products/create/UploadImage.tsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","pages/Products/edit/DeleteConfirm.tsx","pages/Products/edit/index.tsx","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nexport interface SnackbarProps {\n    openSnackbar: boolean,\n    success: boolean,\n    message: string\n}\n\ninterface Props extends SnackbarProps {\n    setOpenSnackbar: (value: boolean) => void\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction SnackbarApp({ openSnackbar, success, message, setOpenSnackbar }: Props) {\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpenSnackbar(false);\n    };\n\n    return (\n        <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity={success ? 'success' : 'error'} sx={{ width: '100%' }}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nexport default SnackbarApp\n","import { DocumentSnapshot } from 'firebase/firestore';\n\nexport interface ProductInterface {\n    productId?: string;\n    categoryId: string;\n    content: number;\n    description: string;\n    image: string | null;\n    name: string;\n    price: number;\n    promo: number;\n    stocks: number;\n    storageLife: number;\n    type: string;\n}\n\nclass ProductModel {\n    product: ProductInterface;\n\n    constructor(product: ProductInterface) {\n        this.product = product;\n    }\n\n    getProduct(): ProductInterface {\n        return this.product;\n    }\n\n    setImage(imageUrl: string) {\n        this.product.image = imageUrl;\n    }\n}\n\nexport function convertProductQuerySnapshots(snapshot: DocumentSnapshot) {\n    const productData = snapshot.data();\n    let productQueryData: ProductInterface = {\n        productId: snapshot.id,\n        categoryId: productData.categoryId,\n        content: productData.content,\n        description: productData.description,\n        image: productData.image,\n        name: productData.name,\n        price: productData.price,\n        promo: productData.promo,\n        stocks: productData.stocks,\n        storageLife: productData.storageLife,\n        type: productData.type\n    };\n\n    return new ProductModel(productQueryData);\n}\n\nexport default ProductModel;","import React from 'react';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { ProductInterface } from 'src/models/products';\n\ninterface Props {\n    productInfo: ProductInterface,\n    onTextChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n    onNumberChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n    onSubmitForm: (event: React.FormEvent<HTMLFormElement>) => void,\n    error: string | null\n}\n\nfunction ProductForm({ productInfo, onTextChange, onNumberChange, onSubmitForm, error }: Props) {\n    const { categoryId, content, description, name, price, promo, stocks, storageLife, type } = productInfo;\n\n    return (\n        <>\n            <Card sx={{ width: '100%', padding: 3 }}>\n                <form onSubmit={event => onSubmitForm(event)}>\n                    <Grid container spacing={2}>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"name\" \n                                label=\"Product Name\" \n                                variant=\"outlined\"\n                                value={name}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"price\" \n                                type=\"number\"\n                                label=\"Price\" \n                                variant=\"outlined\"\n                                value={price}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">₱</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"stocks\" \n                                type=\"number\"\n                                label=\"Stocks\" \n                                variant=\"outlined\"\n                                value={stocks}\n                                onChange={event => onNumberChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"content\" \n                                type=\"number\"\n                                label=\"Content\" \n                                variant=\"outlined\"\n                                value={content}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">grams</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"promo\" \n                                type=\"number\"\n                                label=\"Promo\" \n                                variant=\"outlined\"\n                                value={promo}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">%</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"storageLife\" \n                                type=\"number\"\n                                label=\"Storage Life\" \n                                variant=\"outlined\"\n                                value={storageLife}\n                                onChange={event => onNumberChange(event)}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">days</InputAdornment>\n                                }}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"categoryId\" \n                                label=\"Category\" \n                                variant=\"outlined\"\n                                value={categoryId}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={6} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                name=\"type\" \n                                label=\"Type\" \n                                variant=\"outlined\"\n                                value={type}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                            <TextField \n                                fullWidth\n                                required\n                                multiline\n                                rows={3}\n                                name=\"description\" \n                                label=\"Description\" \n                                variant=\"outlined\"\n                                value={description}\n                                onChange={event => onTextChange(event)}\n                            />\n                        </Grid>\n                        {error !== null && (\n                            <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                                <Box component=\"div\"\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n                                        backgroundColor: '#f294a5',\n                                        height: 50,\n                                        width: '100%',\n                                        filter: 'brightness(85%)'\n                                    }}\n                                >\n                                    <Typography variant=\"h5\" align=\"center\" color=\"white\">Image is required!</Typography>\n                                </Box>\n                            </Grid>\n                        )}\n                        <Grid item sm={12} md={12} sx={{ width: '100%' }}>\n                            <Button type=\"submit\" variant=\"contained\" fullWidth>SAVE PRODUCT</Button> \n                        </Grid>\n                    </Grid>\n                </form>\n            </Card>\n        </>\n    )\n}\n\nexport default ProductForm\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ImageSearchTwoToneIcon from '@mui/icons-material/ImageSearchTwoTone';\nimport { styled } from '@mui/material/styles';\n\ninterface Props {\n    imageFile: Blob,\n    onImageChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    defaultImage: string\n}\n\nconst ProductImgStyle = styled('img')({\n    top: 0,\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    position: 'absolute'\n  });\n\nfunction UploadImage({ imageFile, onImageChange, defaultImage }: Props) {\n    const [imageSource, setImageSource] = React.useState(null);\n\n    React.useEffect(() => {\n        if (imageFile !== null) {\n            let reader = new FileReader();\n            reader.readAsDataURL(imageFile);\n\n            reader.onloadend = function (e) {\n                setImageSource([reader.result]);\n            };\n\n        }\n    }, [imageFile])\n\n    return (\n        <Card sx={{ width: '100%' }}>\n            <Box sx={{ pt: '100%', position: 'relative' }}>\n                <ProductImgStyle \n                    alt=\"product image\" \n                    src={!imageSource ? defaultImage : imageSource} \n                />\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                        startIcon={<ImageSearchTwoToneIcon />}\n                        sx={{\n                            zIndex: 9,\n                            bottom: 16,\n                            right: 16,\n                            position: 'absolute',\n                            textTransform: 'uppercase'\n                        }}\n                    >\n                        Upload Image\n                        <input \n                            type=\"file\" \n                            accept=\"image/png, image/jpeg, image/jpg\"\n                            onChange={event => onImageChange(event)}\n                            hidden \n                        />\n                    </Button>\n            </Box>\n        </Card>\n    )\n}\n\nexport default UploadImage\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\ninterface Props {\n    openDialog: boolean,\n    setOpenDialog: (value: boolean) => void,\n    deleteProduct: () => void\n}\n\nfunction DeleteConfirm({ openDialog, setOpenDialog, deleteProduct }: Props) {\n    function handleClose() {\n        setOpenDialog(false);\n    }\n\n    return (\n        <Dialog\n            open={openDialog}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n            {\"Are you sure you want to delete this product?\"}\n            </DialogTitle>\n            <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n                By clicking delete, this product will no longer be available. If you need this product in the future, you may need to add it again.\n            </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={deleteProduct} color=\"error\" autoFocus>\n                Delete\n            </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default DeleteConfirm\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { useParams } from 'react-router-dom';\nimport { useFirebaseAuth } from 'src/contexts/FirebaseAuthProvider';\nimport { doc, getDoc, setDoc, deleteDoc } from \"firebase/firestore\";\nimport ProductModel, { ProductInterface, convertProductQuerySnapshots } from 'src/models/products';\n\n//icons\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n//components\nimport UploadImage from '../create/UploadImage';\nimport ProductForm from '../create/ProductForm';\nimport DeleteConfirm from './DeleteConfirm';\nimport SnackbarApp, { SnackbarProps } from 'src/components/Snackbar';\n\n\nfunction EditProduct() {\n    const { id } = useParams();\n    const { database } = useFirebaseAuth();\n    const navigate = useNavigate();\n\n    const [product, setProduct] = useState<ProductInterface>({\n        productId: '',\n        categoryId: '',\n        content: 0,\n        description: '',\n        image: '',\n        name: '',\n        price: 0,\n        promo: 0,\n        stocks: 0,\n        storageLife: 0,\n        type: ''\n    });\n    const [imageFile, setImageFile] = useState<Blob | null>(null);\n    const [errors, setErrors] = useState<string | null>(null);\n    const [snackbarApp, setSnackBarApp] = useState<SnackbarProps>({\n        openSnackbar: false,\n        success: true,\n        message: ''\n    });\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [defaultImage, setDefaultImage] = useState<string>(\"https://res.cloudinary.com/nathanalz/image/upload/v1641871922/ButilMNL/sample_img_ve55kv.png\");\n\n    React.useEffect(() => {\n        async function getProduct() {\n            const productRef = doc(database, \"products\", id);\n            const productSnap = await getDoc(productRef);\n\n            if (productSnap.exists()) {\n                const currentProduct = convertProductQuerySnapshots(productSnap);\n\n                setProduct(state => currentProduct.getProduct());\n                setDefaultImage(state => currentProduct.getProduct().image);\n\n            } else {\n                navigate('/404');\n            }\n        }\n\n        getProduct();\n\n    }, [id, database, navigate])\n\n    function onTextChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        setProduct({ ...product, [event.target.name]: event.target.value });\n    }\n\n    function onNumberChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        setProduct({ ...product, [event.target.name]: !isNaN(parseFloat(event.target.value)) ? parseFloat(event.target.value) : '' });\n    }\n\n    function onImageChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setErrors(null);\n        setImageFile(event.target.files[0]);\n    }\n\n    async function uploadProductImage(): Promise<string> {\n        const data = new FormData();\n        data.append('file', imageFile);\n        data.append('upload_preset', 'yys2sx1c');\n        data.append('cloud_name', 'nathanalz');\n\n        const response = await axios.post('https://api.cloudinary.com/v1_1/nathanalz/image/upload', data);\n        const imageUrl = response.data.url;\n        \n        return imageUrl as string;\n    }\n\n    async function onSubmitForm(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        let imageUrl = defaultImage;\n\n        if (imageFile !== null) {\n            const url = await uploadProductImage();\n            imageUrl = url.replace(\"http:\", \"https:\");\n        } \n\n        const productData = new ProductModel(product);\n        productData.setImage(imageUrl);\n\n        const newProductRef = doc(database, \"products\", id);\n        setDoc(newProductRef, productData.getProduct()).then(response => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: true, message: 'Product was edited successfully!' });\n            navigate('/dashboards/products');\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to edit product.' });\n            console.log((error as Error).message);\n        });\n        \n    }\n\n    async function deleteProduct() {\n        deleteDoc(doc(database, \"products\", id)).then(response => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: true, message: 'Product deleted successfully!' });\n            navigate('/dashboards/products');\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to delete product.' });\n            console.log((error as Error).message);\n        });\n    }\n\n    const matches = useMediaQuery('(min-width:600px)');\n\n    return (\n        <>\n            <Helmet>\n                <title>Edit Product</title>\n            </Helmet>\n            <Container sx={{ mb: 5 }}>\n                <Box sx={{ \n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginTop: 5,\n                    marginBottom: 3\n                 }}>\n                     <Typography variant=\"h1\" color=\"primary\">Edit Product</Typography>\n                     <Stack direction=\"row\" spacing={2}>\n                        {!matches ? \n                            <IconButton onClick={event => navigate('/dashboards/products')} color=\"error\">\n                                <CloseIcon />\n                            </IconButton>\n                            :\n                            <Button variant=\"contained\" color=\"error\" startIcon={<CloseIcon />} onClick={event => navigate('/dashboards/products')}>\n                                Cancel\n                            </Button> \n                        }\n                        {!matches ? \n                            <IconButton onClick={event => setOpenDeleteDialog(true)} color=\"error\">\n                                <DeleteIcon />\n                            </IconButton>\n                            :\n                            <Button variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />} onClick={event => setOpenDeleteDialog(true)}>\n                                Delete\n                            </Button> \n                        }\n                     </Stack>\n                 </Box>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={4}>\n                        <UploadImage \n                            imageFile={imageFile} \n                            onImageChange={event => onImageChange(event)} \n                            defaultImage={defaultImage}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={8}>\n                        <ProductForm \n                            productInfo={product} \n                            onTextChange={event => onTextChange(event)} \n                            onNumberChange={event => onNumberChange(event)}\n                            onSubmitForm={event => onSubmitForm(event)}\n                            error={errors}\n                        />\n                    </Grid>\n                </Grid>\n            </Container>\n            <SnackbarApp openSnackbar={snackbarApp.openSnackbar} success={snackbarApp.success} message={snackbarApp.message} setOpenSnackbar={value => setSnackBarApp({ ...snackbarApp, openSnackbar: value })} />\n            <DeleteConfirm openDialog={openDeleteDialog} setOpenDialog={value => setOpenDeleteDialog(value)} deleteProduct={() => deleteProduct()}/>\n        </>\n    )\n}\n\nexport default EditProduct\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["Alert","React","props","ref","elevation","variant","openSnackbar","success","message","setOpenSnackbar","handleClose","event","reason","open","autoHideDuration","onClose","severity","sx","width","ProductModel","product","this","imageUrl","image","convertProductQuerySnapshots","snapshot","productData","data","productQueryData","productId","id","categoryId","content","description","name","price","promo","stocks","storageLife","type","productInfo","onTextChange","onNumberChange","onSubmitForm","error","padding","onSubmit","container","spacing","item","sm","md","fullWidth","required","label","value","onChange","InputProps","startAdornment","position","endAdornment","multiline","rows","component","display","justifyContent","alignItems","backgroundColor","height","filter","align","color","ProductImgStyle","styled","top","objectFit","imageFile","onImageChange","defaultImage","imageSource","setImageSource","reader","FileReader","readAsDataURL","onloadend","e","result","pt","alt","src","startIcon","zIndex","bottom","right","textTransform","accept","hidden","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","Typography","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","inProps","useThemeProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","_jsx","openDialog","setOpenDialog","deleteProduct","Dialog","DialogTitle","DialogContent","DialogActions","Button","onClick","autoFocus","useParams","database","useFirebaseAuth","navigate","useNavigate","useState","setProduct","setImageFile","errors","setErrors","snackbarApp","setSnackBarApp","openDeleteDialog","setOpenDeleteDialog","setDefaultImage","uploadProductImage","FormData","append","axios","response","url","preventDefault","replace","setImage","newProductRef","doc","setDoc","getProduct","then","catch","console","log","deleteDoc","productRef","getDoc","productSnap","exists","currentProduct","state","matches","useMediaQuery","Container","mb","Box","marginTop","marginBottom","Stack","direction","Close","IconButton","Delete","Grid","xs","UploadImage","target","files","ProductForm","isNaN","parseFloat","Snackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}